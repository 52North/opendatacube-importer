name: build push geonode

env:
  TITLE: "52°North OpenDataCube Importer Image"
  VENDOR: "52°North GmbH"
  AUTHORS: "https://52North.org/"
  DESCRIPTION: "52°OpenDataCube Importer Image"
  LICENSE: "Enter spdx link to correct license"

on:
  workflow_dispatch:
    inputs:
      #
      # https://docs.github.com/en/actions/learn-github-actions/contexts#inputs-context
      #
      tags:
        description: "Please provide a git tag value, e.g. v0.1-manually-triggered.1"
        required: true
        type: string
        default: "v0.1-manually-triggered.1"
  push:
    tags:
      - "v*"

jobs:
  push_to_registry:
    name: build push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

#      - name: Cache Docker layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-geonode-cache/
#          key: ${{ runner.os }}-buildx-geonode-${{ github.sha }}
#          # key: ${{ runner.os }}-buildx-geonode-${{ hashFiles('geonode/Dockerfile') }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-geonode-
#            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildkit env
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for tagging Docker Image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: 52north/opendatacube-importer
          labels: |
            "org.opencontainers.image.authors=${{ env.AUTHORS }}"
            "org.opencontainers.image.vendor=${{ env.VENDOR }}"
            "org.opencontainers.image.description=${{ env.DESCRIPTION }}"
            "org.opencontainers.image.title=${{ env.TITLE }}"
            "org.opencontainers.image.licenses=${{ env.LICENSE }}"
          tags: |
            type=match,pattern=v(.*),group=1,value=${{ github.event.inputs.tags }}

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
#          cache-from: type=local,src=/tmp/.buildx-geonode-cache
#          cache-to: type=local,dest=/tmp/.buildx-geonode-cache-new,mode=max
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Move cache
#        run: |
#          rm -rfv /tmp/.buildx-geonode-cache
#          mv -v /tmp/.buildx-geonode-cache-new /tmp/.buildx-geonode-cache
